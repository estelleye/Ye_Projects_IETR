The purpose is to design HW Conroller for HW context switch.

The Controller receives commands from the HW Manager in PS and then control the HW IP behavior.

The Controller is composed of two parts to store the HW IP context:

	-- HW Context Registers component: a set of registers within the HW controller to store IP context
	-- an on-chip memory on FPGA to extend the HW Context Registers. 
	   It is between the HW Controller in PL and the DDR memory in PS. This memory can be seen as a cache memory.


For example, the Controller contains several groups of 32 shift-registers of 32-bits that can be accessed in parallel. 

	For simplicity reason, we consider groups of 32 registers of 32-bits within the HW IP architecture. 

	Within each group, each register is connected to a 32 to 1 multiplexer which is controlled by an external signal 
	coming from the Controller. 
	(The state of the register to be restored is controlled by the 5-bit SEL\_INOUT input generated by the Controller. )

	Only 32 clock cycles are required to store the state of a group of 32 registers into the Controller shift registers, 
	since the registers can be accessible in parallel. 

	Restoring the registers' states is performed through a 1 bit configuration line that is connected to all registers within a group.
	Again, 32 clock cycles are required to restore the registers' states.

Development environment version: Vivado 2017.1 Xilinx SDK 2017.1.
